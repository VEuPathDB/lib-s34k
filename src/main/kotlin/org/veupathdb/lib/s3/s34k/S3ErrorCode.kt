package org.veupathdb.lib.s3.s34k

object S3ErrorCode {
  const val AccessControlListNotSupported = "AccessControlListNotSupported"
  const val AccessDenied = "AccessDenied"
  const val AccessPointAlreadyOwnedByYou = "AccessPointAlreadyOwnedByYou"
  const val AccountProblem = "AccountProblem"
  const val AllAccessDisabled = "AllAccessDisabled"
  const val AmbiguousGrantByEmailAddress = "AmbiguousGrantByEmailAddress"
  const val AuthorizationHeaderMalformed = "AuthorizationHeaderMalformed"
  const val BadDigest = "BadDigest"
  const val BucketAlreadyExists = "BucketAlreadyExists"
  const val BucketAlreadyOwnedByYou = "BucketAlreadyOwnedByYou"
  const val BucketNotEmpty = "BucketNotEmpty"
  const val ClientTokenConflict = "ClientTokenConflict"
  const val CredentialsNotSupported = "CredentialsNotSupported"
  const val CrossLocationLoggingProhibited = "CrossLocationLoggingProhibited"
  const val EntityTooSmall = "EntityTooSmall"
  const val EntityTooLarge = "EntityTooLarge"
  const val ExpiredToken = "ExpiredToken"
  const val IllegalLocationConstraintException = "IllegalLocationConstraintException"
  const val IllegalVersioningConfigurationException = "IllegalVersioningConfigurationException"
  const val IncompleteBody = "IncompleteBody"
  const val IncorrectNumberOfFilesInPostRequest = "IncorrectNumberOfFilesInPostRequest"
  const val InlineDataTooLarge = "InlineDataTooLarge"
  const val InternalError = "InternalError"
  const val InvalidAccessKeyId = "InvalidAccessKeyId"
  const val InvalidAccessPoint = "InvalidAccessPoint"
  const val InvalidAccessPointAliasError = "InvalidAccessPointAliasError"
  const val InvalidAddressingHeader = "InvalidAddressingHeader"
  const val InvalidArgument = "InvalidArgument"
  const val InvalidBucketAclWithObjectOwnership = "InvalidBucketAclWithObjectOwnership"
  const val InvalidBucketName = "InvalidBucketName"
  const val InvalidBucketState = "InvalidBucketState"
  const val InvalidDigest = "InvalidDigest"
  const val InvalidEncryptionAlgorithmError = "InvalidEncryptionAlgorithmError"
  const val InvalidLocationConstraint = "InvalidLocationConstraint"
  const val InvalidObjectState = "InvalidObjectState"
  const val InvalidPart = "InvalidPart"
  const val InvalidPartOrder = "InvalidPartOrder"
  const val InvalidPayer = "InvalidPayer"
  const val InvalidPolicyDocument = "InvalidPolicyDocument"
  const val InvalidRange = "InvalidRange"
  const val InvalidRequest = "InvalidRequest"
  const val InvalidSecurity = "InvalidSecurity"
  const val InvalidSOAPRequest = "InvalidSOAPRequest"
  const val InvalidStorageClass = "InvalidStorageClass"
  const val InvalidTargetBucketForLogging = "InvalidTargetBucketForLogging"
  const val InvalidToken = "InvalidToken"
  const val InvalidURI = "InvalidURI"
  const val KeyTooLongError = "KeyTooLongError"
  const val MalformedACLError = "MalformedACLError"
  const val MalformedPOSTRequest = "MalformedPOSTRequest"
  const val MalformedXML = "MalformedXML"
  const val MaxMessageLengthExceeded = "MaxMessageLengthExceeded"
  const val MaxPostPreDataLengthExceededError = "MaxPostPreDataLengthExceededError"
  const val MetadataTooLarge = "MetadataTooLarge"
  const val MethodNotAllowed = "MethodNotAllowed"
  const val MissingAttachment = "MissingAttachment"
  const val MissingContentLength = "MissingContentLength"
  const val MissingRequestBodyError = "MissingRequestBodyError"
  const val MissingSecurityElement = "MissingSecurityElement"
  const val MissingSecurityHeader = "MissingSecurityHeader"
  const val NoLoggingStatusForKey = "NoLoggingStatusForKey"
  const val NoSuchBucket = "NoSuchBucket"
  const val NoSuchBucketPolicy = "NoSuchBucketPolicy"
  const val NoSuchCORSConfiguration = "NoSuchCORSConfiguration"
  const val NoSuchKey = "NoSuchKey"
  const val NoSuchLifecycleConfiguration = "NoSuchLifecycleConfiguration"
  const val NoSuchMultiRegionAccessPoint = "NoSuchMultiRegionAccessPoint"
  const val NoSuchWebsiteConfiguration = "NoSuchWebsiteConfiguration"
  const val NoSuchTagSet = "NoSuchTagSet"
  const val NoSuchUpload = "NoSuchUpload"
  const val NoSuchVersion = "NoSuchVersion"
  const val NotImplemented = "NotImplemented"
  const val NotModified = "NotModified"
  const val NotSignedUp = "NotSignedUp"
  const val OwnershipControlsNotFoundError = "OwnershipControlsNotFoundError"
  const val OperationAborted = "OperationAborted"
  const val PermanentRedirect = "PermanentRedirect"
  const val PreconditionFailed = "PreconditionFailed"
  const val Redirect = "Redirect"
  const val RequestHeaderSectionTooLarge = "RequestHeaderSectionTooLarge"
  const val RequestIsNotMultiPartContent = "RequestIsNotMultiPartContent"
  const val RequestTimeout = "RequestTimeout"
  const val RequestTimeTooSkewed = "RequestTimeTooSkewed"
  const val RequestTorrentOfBucketError = "RequestTorrentOfBucketError"
  const val RestoreAlreadyInProgress = "RestoreAlreadyInProgress"
  const val ServerSideEncryptionConfigurationNotFoundError = "ServerSideEncryptionConfigurationNotFoundError"
  const val ServiceUnavailable = "ServiceUnavailable"
  const val SignatureDoesNotMatch = "SignatureDoesNotMatch"
  const val SlowDown = "SlowDown"
  const val TemporaryRedirect = "TemporaryRedirect"
  const val TokenRefreshRequired = "TokenRefreshRequired"
  const val TooManyAccessPoints = "TooManyAccessPoints"
  const val TooManyBuckets = "TooManyBuckets"
  const val TooManyMultiRegionAccessPointregionsError = "TooManyMultiRegionAccessPointregionsError"
  const val TooManyMultiRegionAccessPoints = "TooManyMultiRegionAccessPoints"
  const val UnexpectedContent = "UnexpectedContent"
  const val UnresolvableGrantByEmailAddress = "UnresolvableGrantByEmailAddress"
  const val UserKeyMustBeSpecified = "UserKeyMustBeSpecified"
  const val NoSuchAccessPoint = "NoSuchAccessPoint"
  const val InvalidTag = "InvalidTag"
  const val MalformedPolicy = "MalformedPolicy"
}